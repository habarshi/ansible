---

- name: Pull postgres image
  command: "docker pull {{ postgres_image }}"

- name: Pull habarshi image
  command: "docker pull {{ habarshi_image }}"
  
- name: Ensures {{ habarshi_path }} dir exists
  file:
    path: "{{ habarshi_path }}"
    state: "directory"
  
- name: Generate docker-compose file
  template:
    src: "opt/habarshi/docker-compose.j2"
    dest: "{{ habarshi_path }}/docker-compose.yml"
    owner: "root"
    group: "root"
    mode: "0644"
    
- name: Ensures {{ habarshi_path }}/docker-entrypoint-initdb.d dir exists
  file:
    path: "{{ habarshi_path }}/docker-entrypoint-initdb.d"
    state: "directory"
    
- name: Initiaize database step 1 
  template:
    src: "opt/habarshi/docker-entrypoint-initdb.d/init_script.j2"
    dest: "{{ habarshi_path }}/docker-entrypoint-initdb.d/init_script.sql"
    owner: "root"
    group: "root"
    mode: "0600"
    
    
- name: Initiaize database step 2
  command: "docker-compose -f {{ habarshi_path }}/docker-compose.yml up -d db"
    
- name: Ensures {{ habarshi_path }}/db/data dir exists
  file:
    path: "{{ habarshi_path }}/db/data"
    state: "directory"
    
- name: Generate postgres pg_hba.conf
  template:
    src: "opt/habarshi/db/data/pg_hba.j2"
    dest: "{{ habarshi_path }}/db/data/pg_hba.conf"
    owner: "root"
    group: "root"
    mode: "0600"
    
    
- name: Create symlinks to certificates for XMPP server
  file:
    src: "{{ item.path }}"
    dest: "{{ item.dest }}"
    state: link
  with_items:
    - { path: "{{ ssl_certificate }}", dest: "{{ habarshi_keys_path }}/habarshi.crt" }
    - { path: "{{ ssl_certificate_key }}", dest: "{{ habarshi_keys_path }}/habarshi.key" }

    
#- name: Up docker-compose services
#  command: "docker-compose -f {{ habarshi_path }}/docker-compose.yml up -d"
